
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;

	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ВыполнитьАвтозаполнение() Экспорт
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор,"ВКМ_АбонентскаяПлата, ВКМ_ЧасоваяСтавкаСпециалиста");
	АбонПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	РаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	Если ЗначениеЗаполнено(АбонПлата) И ЗначениеЗаполнено(РаботыСпециалиста) Тогда
		Если ЗначенияРеквизитов.ВКМ_АбонентскаяПлата <> 0 Тогда
			Услуги.Очистить();
			СтрокаАбонПлаты = Услуги.Добавить();
			СтрокаАбонПлаты.Номенклатура = АбонПлата;
			СтрокаАбонПлаты.Количество = 1;
			СтрокаАбонПлаты.Цена = ЗначенияРеквизитов.ВКМ_АбонентскаяПлата;
			СтрокаАбонПлаты.Сумма = СтрокаАбонПлаты.Количество * СтрокаАбонПлаты.Цена;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_Клиент,
			|	ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_Договор,
			|	СУММА(ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_СуммаКОплатеРасход) КАК Сумма,
			|	СУММА(ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_КоличествоЧасовРасход) КАК КоличествоЧасов
			|ИЗ
			|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&НачалоПериода, &КонецПериода,,) КАК
			|		ВКМ_ВыполненныеКлиентуРаботыОбороты
			|ГДЕ
			|	ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_Клиент = &Клиент
			|	И ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_Договор = &Договор
			|СГРУППИРОВАТЬ ПО
			|	ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_Клиент,
			|	ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_Договор";
		
		Запрос.УстановитьПараметр("Клиент", Контрагент);
		Запрос.УстановитьПараметр("Договор", Договор);
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрокаАбонПлаты = Услуги.Добавить();
			СтрокаАбонПлаты.Номенклатура = РаботыСпециалиста;
			СтрокаАбонПлаты.Количество = ВыборкаДетальныеЗаписи.КоличествоЧасов;
			СтрокаАбонПлаты.Цена = ЗначенияРеквизитов.ВКМ_ЧасоваяСтавкаСпециалиста;
			СтрокаАбонПлаты.Сумма = СтрокаАбонПлаты.Количество * СтрокаАбонПлаты.Цена;
		КонецЦикла;
		
	Иначе
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не заполнены константы Абонентской платы или Работы специалиста.";
		Сообщение.Сообщить();
		Услуги.Очистить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли
