
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Очистить();
	
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	ПериодРегистрации = НачалоМесяца(Дата);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК ВКМ_Сотрудник,
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_Сотрудник.ВКМ_КатегорияСотрудника КАК КатегорияСотрудника,
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_ВидРасчета КАК ВКМ_ВидРасчета,
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_ДатаНачала КАК ВКМ_ДатаНачала,
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_ДатаОкончания КАК ВКМ_ДатаОкончания,
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_ГрафикРаботы КАК ВКМ_ГрафикРаботы,
		|	&ПериодРегистрации КАК ПериодРегистрации
		|ПОМЕСТИТЬ вт_Док
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.ВКМ_ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_Док.ВКМ_Сотрудник КАК ВКМ_Сотрудник,
		|	вт_Док.КатегорияСотрудника КАК ВКМ_КатегорияСотрудника,
		|	вт_Док.ВКМ_ВидРасчета КАК ВидРасчета,
		|	вт_Док.ВКМ_ДатаНачала КАК ПериодДействияНачало,
		|	КОНЕЦПЕРИОДА(вт_Док.ВКМ_ДатаОкончания, ДЕНЬ) КАК ПериодДействияКонец,
		|	вт_Док.ВКМ_ГрафикРаботы КАК ВКМ_ГрафикРаботы,
		|	ВЫБОР
		|		КОГДА вт_Док.ВКМ_ВидРасчета = &Оклад
		|			ТОГДА ВЫБОР
		|					КОГДА вт_Док.КатегорияСотрудника = ЗНАЧЕНИЕ(Справочник.ВКМ_КатегорииСпециалистов.Специалист)
		|						ТОГДА ЕСТЬNULL(ВКМ_МинимальныйОклад.Значение, 0)
		|					КОГДА вт_Док.КатегорияСотрудника = ЗНАЧЕНИЕ(Справочник.ВКМ_КатегорииСпециалистов.Администратор)
		|						ТОГДА ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Оклад, 0)
		|				КОНЕЦ
		|	КОНЕЦ КАК ВКМ_Показатель,
		|	вт_Док.ПериодРегистрации КАК ПериодРегистрации,
		|	ВЫБОР
		|		КОГДА вт_Док.ВКМ_ВидРасчета = &Отпуск
		|			ТОГДА ДОБАВИТЬКДАТЕ(вт_Док.ПериодРегистрации, МЕСЯЦ, -12)
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК БазовыйПериодНачало,
		|	ВЫБОР
		|		КОГДА вт_Док.ВКМ_ВидРасчета = &Отпуск
		|			ТОГДА ДОБАВИТЬКДАТЕ(вт_Док.ПериодРегистрации, СЕКУНДА, -1)
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК БазовыйПериодКонец,
		|	ВЫБОР
		|		КОГДА вт_Док.ВКМ_ВидРасчета = &Оклад
		|			ТОГДА ВЫБОР
		|					КОГДА вт_Док.КатегорияСотрудника = ЗНАЧЕНИЕ(Справочник.ВКМ_КатегорииСпециалистов.Специалист)
		|						ТОГДА ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_ПроцентОтРабот, НЕОПРЕДЕЛЕНО)
		|				КОНЕЦ
		|	КОНЕЦ КАК ВКМ_ПроцентСпециалиста
		|ИЗ
		|	вт_Док КАК вт_Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ВКМ_МинимальныйОклад КАК ВКМ_МинимальныйОклад
		|		ПО (вт_Док.КатегорияСотрудника = ЗНАЧЕНИЕ(Справочник.ВКМ_КатегорииСпециалистов.Специалист))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
		|				&ПериодРегистрации,
		|				ВКМ_Сотрудник В
		|					(ВЫБРАТЬ
		|						вт_Док.ВКМ_Сотрудник КАК ВКМ_Сотрудник
		|					ИЗ
		|						вт_Док КАК вт_Док)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО вт_Док.ВКМ_Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник";
	
	Запрос.УстановитьПараметр("Отпуск"				, ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Оклад"				, ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка"				, Ссылка);
	Запрос.УстановитьПараметр("ПериодРегистрации"	, ПериодРегистрации);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл

		Если Выборка.ВКМ_ПроцентСпециалиста = Неопределено Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Для специалиста %1 не установлено значение процента выплат", Выборка.ВКМ_Сотрудник);
			Сообщение.Сообщить();
		КонецЕсли;

		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
	// РАСЧЕТ ОКЛАДА

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_Показатель КАК ВКМ_Показатель,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеПериодДействия КАК ВКМ_ЗначениеПериодДействия,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеФактическийПериодДействия КАК ВКМ_ЗначениеФактическийПериодДействия
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Регистратор
		|				И ВидРасчета = &Оклад) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Оклад"		, ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Регистратор"	, Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Запись Из Движения.ВКМ_ОсновныеНачисления Цикл
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Запись.НомерСтроки, "НомерСтроки") Тогда		
			Запись.ВКМ_Результат = ?(Выборка.ВКМ_ЗначениеПериодДействия = 0, 0,
			Выборка.ВКМ_ЗначениеФактическийПериодДействия / Выборка.ВКМ_ЗначениеПериодДействия * Выборка.ВКМ_Показатель);
			Запись.ВКМ_ОтработаноДней = Выборка.ВКМ_ЗначениеФактическийПериодДействия;
		КонецЕсли;
		
		ДвижениеВз = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		ДвижениеВз.ВидДвижения = ВидДвиженияНакопления.Приход;
		ДвижениеВз.Период = Дата;
		ДвижениеВз.ВКМ_Сотрудник = Движение.ВКМ_Сотрудник;
		ДвижениеВз.ВКМ_Сумма = Движение.ВКМ_Результат;
			
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
	
	// РАСЧЕТ ПРЕМИИ
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК ВКМ_Сотрудник,
	|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_ВидРасчета КАК ВКМ_ВидРасчета,
	|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_ДатаНачала КАК ВКМ_ДатаНачала,
	|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_ДатаОкончания КАК ВКМ_ДатаОкончания,
	|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_ГрафикРаботы КАК ВКМ_ГрафикРаботы
	|ПОМЕСТИТЬ вт_Док
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.ВКМ_ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.ВКМ_Сотрудник КАК ВКМ_Сотрудник,
	|	СУММА(ВКМ_ВыполненныеСотрудникомРаботыОбороты.ВКМ_ЧасовКОплатеОборот) КАК ЧасовКОплате,
	|	СУММА(ВКМ_ВыполненныеСотрудникомРаботыОбороты.ВКМ_СуммаКОплатеОборот) КАК СуммаКОплате
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(
	|			&МинимальнаяДатаНачала,
	|			&МаксимальнаяДатаОкончания,
	|			Авто,
	|			ВКМ_Сотрудник.ВКМ_КатегорияСотрудника = &КатегорияСотрудников
	|				И ВКМ_Сотрудник В
	|					(ВЫБРАТЬ
	|						вт_Док.ВКМ_Сотрудник КАК ВКМ_Сотрудник
	|					ИЗ
	|						вт_Док КАК вт_Док)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.ВКМ_Сотрудник";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МинимальнаяДатаНачала", ПериодРегистрации);
	Запрос.УстановитьПараметр("МаксимальнаяДатаОкончания", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КатегорияСотрудников", Справочники.ВКМ_КатегорииСпециалистов.Специалист);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.Процент;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.ВКМ_Сотрудник = ВыборкаДетальныеЗаписи.ВКМ_Сотрудник;
		Движение.ВКМ_Результат = ВыборкаДетальныеЗаписи.СуммаКОплате;
		Движение.ВКМ_ОтработаноЧасов = ВыборкаДетальныеЗаписи.ЧасовКОплате;
		
		ДвижениеВз = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		ДвижениеВз.ВидДвижения = ВидДвиженияНакопления.Приход;
		ДвижениеВз.Период = Дата;
		ДвижениеВз.ВКМ_Сотрудник = Движение.ВКМ_Сотрудник;
		ДвижениеВз.ВКМ_Сумма = Движение.ВКМ_Результат;
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
		// РАСЧЕТ ОТПУСКА
	
	Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_РезультатБаза, 0) + ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.ВКМ_РезультатБаза, 0) КАК База,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеФактическийПериодДействия, 0) КАК ДнейОтпуска,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_ОтработаноДнейБаза, 0) КАК ДнейБаза
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				ВидРасчета = &Отпуск
		|					И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				ВидРасчета = &Отпуск
		|					И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
		|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
		
		Измерения = Новый Массив;
		Измерения.Добавить("ВКМ_Сотрудник");
		
		Запрос.УстановитьПараметр("Измерения", Измерения);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Для Каждого Запись из Движения.ВКМ_ОсновныеНачисления Цикл
			Если Запись.ВидРасчета <> ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
				Продолжить;
			КонецЕсли;
			Выборка.Сбросить();
			Если Выборка.НайтиСледующий(Запись.НомерСтроки, "НомерСтроки") Тогда
				Запись.ВКМ_Результат = ?(Выборка.ДнейБаза = 0, 0, (Выборка.База / Выборка.ДнейБаза) * Выборка.ДнейОтпуска);
			КонецЕсли;
			
			ДвижениеВз = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
			ДвижениеВз.ВидДвижения = ВидДвиженияНакопления.Приход;
			ДвижениеВз.Период = Дата;
			ДвижениеВз.ВКМ_Сотрудник = Запись.ВКМ_Сотрудник;
			ДвижениеВз.ВКМ_Сумма = Запись.ВКМ_Результат;
		КонецЦикла;
		
		
		Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
		
		//расчет НДФЛ
		ТабОснНачиления = ВКМ_ОсновныеНачисления.Выгрузить(,"ВКМ_Сотрудник");
		ТабОснНачиления.Свернуть("ВКМ_Сотрудник");
		
		Для Каждого Сотрудник ИЗ ТабОснНачиления Цикл
			Движение = Движения.ВКМ_Удержания.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
			Движение.ПериодДействияНачало = ПериодРегистрации;
			Движение.ПериодДействияКонец = КонецМесяца(ПериодРегистрации);
			Движение.ВКМ_Сотрудник = Сотрудник.ВКМ_Сотрудник;
			Движение.БазовыйПериодНачало = ПериодРегистрации;
			Движение.БазовыйПериодКонец = КонецМесяца(ПериодРегистрации);
		КонецЦикла;
		
		Движения.ВКМ_Удержания.Записать();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки,
		|	ВКМ_Удержания.ВКМ_Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.ВКМ_РезультатБаза, 0) КАК НачисленоБаза,
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РегистраторРазрез КАК РегистраторРазрез
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				&Разрезы,
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &Удержание) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Ссылка
		|	И ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РегистраторРазрез = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Регистратор";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);   
		Запрос.УстановитьПараметр("Удержание",  ПланыВидовРасчета.ВКМ_Удержания.НДФЛ);  
		
		Измерения = Новый Массив;
		Измерения.Добавить("ВКМ_Сотрудник"); 
		
		Разрезы = Новый Массив;
		Разрезы.Добавить("Регистратор");
		
		Запрос.УстановитьПараметр("Измерения", Измерения); 
		Запрос.УстановитьПараметр("Разрезы", Разрезы);  
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки-1];
			Движение.ВКМ_Результат = Выборка.НачисленоБаза/100*13; 
			Движения.ВКМ_Удержания.Записать(, Истина);
			
			ДвижениеВз = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
			ДвижениеВз.ВидДвижения = ВидДвиженияНакопления.Расход;
			ДвижениеВз.Период = Дата;
			ДвижениеВз.ВКМ_Сотрудник = Выборка.Сотрудник;
			ДвижениеВз.ВКМ_Сумма = Движение.ВКМ_Результат;
			
		КонецЦикла;
		
		Движения.ВКМ_Удержания.Записать();
		
КонецПроцедуры